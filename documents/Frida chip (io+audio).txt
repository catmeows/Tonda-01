Frida
Frida is custom chip that cares about i/o and sound in Tonda 01 computer.

I/O
 
 Atari joy 1    - J1U..joystick 1 up, J1D..joystick 1 down, J1L..joystick 1 left, J1R..joystick 1 right, J1F..joystick 1 fire
 Atari joy 2    - J2U..joystick 1 up, J2D..joystick 1 down, J2L..joystick 1 left, J2R..joystick 1 right, J2F..joystick 1 fire
 Tape           - TI..tape input, TO..tape output
 Keyboard       - R0-R7..keyboard row select, K0-K7
 Disk           - FD0-FD7..floppy data, FPI..floppy data pilot, FR..floppy read, FW..floppy write, FWP..floppy write protect, FDS..floppy disk select
                - FM0-FM3..floppy step motor, FT0..floppy track zero  
                - FX1,FX2,FX3,FX4..additional lines to floppy drive, could be used for simplified, software driven RS232 serial interface built in floppy unit
 Parallel       - PD0-PD7..printer data, PBS..busy, P/A../ACK, P/S../STROBE
 Led Diode      - LD Programmable led diode, used to indicate Caps Lock
  
 
 +-----+-----++-----+-----+-----+-----+-----+-----+-----+-----++-----+-----+-----+-----+-----+-----+-----+-----+
 | PC0 | PC1 || PA0 | PA1 | PA2 | PA3 | PA4 | PA5 | PA6 | PA7 || PB0 | PB1 | PB2 | PB3 | PB4 | PB5 | PB6 | PB7 |
 +=====+=====++=====+=====+=====+=====+=====+=====+=====+=====++=====+=====+=====+=====+=====+=====+=====+=====+
 |  0  |  0  || J1U | J1D | J1L | J1R | J1F | TI  | TO  | LD  || J2U | J2D | J2L | J2R | J2F | FX3 | FX4 |(FT0)| 
 +-----+-----++-----+-----+-----+-----+-----+-----+-----+-----++-----+-----+-----+-----+-----+-----+-----+-----+
 |  0  |  1  || R0  | R1  | R2  | R3  | R4  | R5  | R6  | R7  || K0  | K1  | K2  | K3  | K4  | K5  | K6  |(FT0)|
 +-----+-----++-----+-----+-----+-----+-----+-----+-----+-----++-----+-----+-----+-----+-----+-----+-----+-----+
 |  1  |  0  || FD0 | FD1 | FD2 | FD3 | FD4 | FD5 | FD6 | FD7 || FPI | FR  | FW  | FWP | FDS | FX1 | FX2 |(FT0)|
 +-----+-----++-----+-----+-----+-----+-----+-----+-----+-----++-----+-----+-----+-----+-----+-----+-----+-----+
 |  1  |  1  || PD0 | PD1 | PD2 | PD3 | PD4 | PD5 | PD6 | PD7 || PBS | P/A | P/S | FM0 | FM1 | FM2 | FM3 | FT0 |
 +-----+-----++-----+-----+-----+-----+-----+-----+-----+-----++-----+-----+-----+-----+-----+-----+-----+-----+
 
Register

$C080 - IOCTRL (MM
$C081 - POTX
$C082 - POTY
$C083 - DIRA
$C084 - DIRB
$C085 - PA
$C086 - PB

$C088 - SNDCTRL (xxxx3210..bit selects channel(s) to write.)
$C089 - WAVELO  (fetched and loaded when WAVEHI written)
$C08A - WAVEHI
$C08B - FREQLO  (fetched and loaded when FREQHI written)
$C08C - FREQHI
$C08D - MODE    (xxxxNVVV..N selects noise on/off, VVV selects volume 0-7)


KEYBOARD
Tonda 01 has 55 key keyboards. TODO: add TAB key as 56th key ?

Physical layout looks like this
+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+
|    |  ! |  @ |  # |  $ |  % |  ^ |  & |  * |  ( |  ) |  _ |  { |  } |    |
| up |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  0 |  - |  [ |  ] |del |
+----+----+----+----+----+----+----+----+----+----+----+----+----+----+----+
  |    |  ~ |  ` |    |    |    |    |    |    |    |    |  + |    |    |
  |down|  Q |  W |  E |  R |  T |  Y |  U |  I |  O |  P |  = |left|rght|
  +----+----+----+----+----+----+----+----+----+----+----+----+----+----+
    |    |    |    |    |    |    |    |    |  \ |  | |  : |  " |    |
    |ctrl|  A |  S |  D |  F |  G |  H |  J |  K |  L |  ; |  ' |ent |
    +----+----+----+----+----+----+----+----+----+----+----+----+----+
      |    |    |    |    |    |    |  £ |  © |  < |  > |  ? |    |
      |shft|  Z |  X |  C |  V |  B |  N |  M |  , |  . |  / |shft|
      +----+----+----+----+----+----+----+----+----+----+----+----+
                   |                                 |
                   |    space                        |
                   +---------------------------------+
                   
 In hardware, keyboard is matrix of seven columns and eight rows. 7x8 = 56 so one position in matrix is unused (indicated as <none> in table)
 
 Column  KeybSelect    bits 7   6     5     4      3       2        1      0
 0       %10111111        up  down  ctrl  lshft  <none>  delete   right  ]    
 1       %11011111        1   Q     A     Z      space   enter    left   [
 2       %11101111        2   W     S     X      rshft   apostrf  =      -
 3       %11110111        3   E     D     C      /       semicol  P      0
 4       %11111011        4   R     F     V      period  L        O      9
 5       %11111101        5   T     G     B      comma   K        I      8
 6       %11111110        6   Y     H     N      M       J        U      7
                   
 Reading keyboard:
 1) Write value %00000001 to IOCTRL port to select keyboard
 2) Write value %11111111 (all write) to DIRA port
 3) Write value %00000000 (all read) to DIRB port
 4) Write keyboard column bits to PA port (see table)
 4) Read from PB port - if key is pressed the bit is reset
 
 It is possible read more columns at once. For example if %11000111 (columns 1 to 5) is written into KEYB CTRL, bit 7 will be reset if any of keys '1' or '2' or '3' is pressed. 
                   

ATARI JOYSTICK PORT
Joystick port has 5 digital pins and 2 analog pins. As for digital pins, they can be used either as input or output.
Analog pins can be read only.

Reading digital pins of Joy1:
1) Write value %00000000 to IOCTRL port to select joystick/tape/led
2) Write value %00000000 (all READ) to DIRA port
3) Read value from PA port
   
Now value has lower 5 bits set according values on pins: ???64321. With standard joystick wiring it is translanted as ???FRLUD (Fire, Right, Left, Up, Down).
Bit is set if when direction/fire is triggered.   

Reading analog pins:
1) Read port POTX (POTY) to get time from last edge TODO: timing

TAPE
Reading tape input
1) Write value %00000000 to IOCTRL port to select joystick/tape/led
2) Write value %00000000 (all READ) to DIRA port
3) Read value from PA port
4) Isolate bit 5, that is reading on tape input

Writing to tape output
1) Write value %00000000 to IOCTRL port to select joystick/tape
2) Write value %01000000 (bit 6 to WRITE) to DIRA port
3) Write value to PA port, bit 6 will be send to tape

PARALLEL PORT
This is minimal parallel port with 8 data lines and Busy, /Ack, /Strobe lines

AUDIO
Frida provides 4 channels: A, B, C, D
Channels A,B are mixed together as first output and C,D are mixed together as second audio output. In normal circumstancies, these two audio lines are connected to internal speaker.  
Connecting 3.5mm stereo jack into AUDIO connector disables internal speaker. In such case, channels A,B are routed to left output and channels C,D are routed to right output.

Each channel is controlled by 5 registers:
FREQL - lower 8 bits of frequency (pitch) control
FREQH - higher 4 bits of frequency (pitch) control
WAVEL - low wave form bits
WAVEH - high wave form bits
AUD CTRL - control port with bits E...NVVV where E is enabled, N is Noise flag, VVV is volume. VVV has valid values 0..4.

FREQL and FREQH forms frequency divider (higher value means lower frequency/tone pitch) that gives pace at which two wave register, WAVEL and WAVEH registers are shifted.
When FREQL and FREQH are both zeroed, the clock is stopped
Most significant bits of WAVEL and WAVEH forms value 0..3 that gives output level for the particular channel.
This output level is multiplied by value VVV from AUD CTRL register.
When N bit is reset, most significant bit shifted out from WAVEL/WAVEH register and is put into bit 0. Effectively, the values in WAVEL/WAVEH registers are rotated.
When N bit is set, the shift register is turned into linear feedback register producing pseudorandom stream of bits.

To set a channel
1) disable channel, set FREQL=0, then FREQH=0
2) set WAVEL, WAVEH 
   e.g. to set triangle wave 
   WAVEL = %10101000 
   WAVEH = %01110000
   
   3 ..X.....
   2 .XXX....
   1 XXXXX...
   
3) set FREQL, FREQH
            
   pitch = 1.75MHz / (16 * FREQ)
   
   FREQ = 1.75MHz / (16 * pitch)
   
   Example:
   Note  Freq[Hz] FREQ RealHz
         26.71    4095
   A0    27.50    3977
   A#0   29.14    3753
   B0    30.87    3543
   C1    32.70    3345
   C2    65.41    1672
   C3   130.8      836
   C4   261.6      418
   C5   523.3      209
   C6  1047        104 
   C#6 1109         99 1105 (-0.4%)
   D6  1175         93
   D#6 1245         88
   E6  1319         83
   F6  1397         78 
   F#6 1480         74
   G   1568         70
   G#6 1661         66 
   A6  1760         62 1764 (+0.2%)
   A#6 1865         59 1854 (-0.6%)
   B6  1976         55 1989 (+0.6%)
   C7  2093         52 2103 (+0.5%)  
   C#7 2217         49         
   D7  2349         47
   D#7 2489         44
   E7  2637         42
   
 
4) set volume 0..7 in VVV of AUD CTRL port
5) (optional) enable LFSR by setting N in AUD CTRL port


