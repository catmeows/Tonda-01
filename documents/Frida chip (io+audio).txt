Frida
Frida is custom chip that cares about i/o and sound in Tonda 01 computer.

Pins:
0,1 - Vcc, Vss
2..9 - out: PR0,PR1,PR2,PR3,PR4,PR5,PR6,PR7 (printer data)
10 - out: caps lock led
11 - out: /STROBE (printer strobe)
12 - in: /BUSY
13,14,15 - out: row select
16..23 - in/out: D0..D7 (data bus)
24 - /in: CS (chip select)
25 - in: clock (system clock)
26 - out: audio
27,28 - in: potentiometer PX, PY
29 - in: RW
30,31 - in/out: TAPE IN/OUT
32..38 - in: read keyboard/joystick (7 bits)
39 - in: A0 register select

Pins 13,14,15 are connected to 74LS138 (3 to 8 line decoder)

Registers:
$BFE0 SELECT      - register select (register remains selected till change)
$BFE1 REGISTER    - register write/read

$00 - BITS        - b7|b6|b5|b4|b3|b2|b1|b0 - direction of printer data lines, 0..read, 1..write    
$01 - PRINTER     - d7|d6|d5|d4|d3|d2|d1|d0 - printer data 
$02 - CONTROLOUT  - px|py|cl|ps|to|s2|s1|s0 - strobe potentiometer (px,py), caps lock led (cl), printer strobe (ps), tape out (to), select key row (s2-s0)
$03 - CONTROLIN   - ..|..|..|..|..|..|pb|ti - printer busy (pb), tape in (ti) 
$04 - KEYBOARD    - --|k6|k5|k4|k3|k2|k1|k0 - read keyboard bits
$05 - POTX        - potentiometer X
$06 - POTY        - potentiometer Y

$10 - FREQHI1     - NVVVFFFF - N..noise on/off, VVV..volume 0..7, FFFF..high 4 bits of frequency
$11 - FREQLO1     - FFFFFFFF - low 8 bit of frequency (latch, loaded when FREQHI1 is written)
$12 - WAVEHI1     - WWWWWWWW - high wave sample 
$13 - WAVELO1     - WWWWWWWW - low wave sample (latch, loaded when WAVEHI1 is written
$14 - FREQHI2
$15 - FREQLO2
$16 - WAVEHI2
$17 - WAVELO2
$18 - FREQHI3
$19 - FREQLO3
$1A - WAVEHI3
$1B - WAVELO3
$1C - FREQHI4
$1D - FREQLO4
$1E - WAVEHI4
$1F - WAVELO4


I/O

KEYBOARD
Tonda 01 has 56 key keyboards. 

Physical layout looks like this 
Regular and shift:
     +----+----+----+----+----+----+----+----+----+----+----+----+-----+
     |  ! |  @ |  # |  $ |  % |  ^ |  & |  * |  ( |  ) |  _ |  + |     |
     |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  0 |  - |  = | del |
  +--+----+----+----+----+----+----+----+----+----+----+----+----+-----+
  |    |    |    |    |    |    |    |    |    |    |    |  { |  } |  
  |tab |  Q |  W |  E |  R |  T |  Y |  U |  I |  O |  P |  [ |  ] |
  +----+----+----+----+----+----+----+----+----+----+----+----+----+-----+
    |    |    |    |    |    |    |    |    |    |    |  : |  " |        |
    |ctrl|  A |  S |  D |  F |  G |  H |  J |  K |  L |  ; |  ' |enter   |  
    +----+----+----+----+----+----+----+----+----+----+----+----+--------+
      |    |    |    |    |    |    |    |    |  < |  > |  ? |    |      |
      |shft|  Z |  X |  C |  V |  B |  N |  M |  , |  . |  / | up |shft  |
      +----+----+----+----+----+----+----+----+----+----+----+----+------+
                   |                                 |  |    |    |    |
                   |    space                        |  |left|down|rght|
                   +---------------------------------+  +----+----+----+
                   
Regular and ctrl:
     +----+----+----+----+----+----+----+----+----+----+----+----+-----+
     |    |    |    |    |    |    |    |    |    |    |    |    |break|
     |  1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  0 |  - |  = | del |
  +--+----+----+----+----+----+----+----+----+----+----+----+----+-----+
  |edit|    |    |    |    |    |    |    |    |    |    |    |    |  
  |tab |  Q |  W |  E |  R |  T |  Y |  U |  I |  O |  P |  [ |  ] |
  +----+----+----+----+----+----+----+----+----+----+----+----+----+-----+
    |    |    |    |    |    |    |    |    |    |    |    |    |        |
    |ctrl|  A |  S |  D |  F |  G |  H |  J |  K |  L |  ; |  ' |enter   |  
    +----+----+----+----+----+----+----+----+----+----+----+----+--------+
      |    |undo|cut |copy|past|    |  ` |  Â© |  ~ |  \ |  | |    |      |
      |shft|  Z |  X |  C |  V |  B |  N |  M |  , |  . |  / | up |shft  |
      +----+----+----+----+----+----+----+----+----+----+----+----+------+
                   |                                 |  |    |    |    |
                   |    space                        |  |left|down|rght|
                   +---------------------------------+  +----+----+----+
                   
                   
 In hardware, keyboard is matrix of seven columns and eight rows. 
 
 Reading key:
 1) Write to SELECT ($BFE0) $03 (select CONTROLOUT)
 2) Read REGISTER ($BFE1) and mask bits 3,2,1,0
 3) Write to REGISTER ($BFE1) combination of row to read (bits 2,1,0), keyboard select (b3=0) and upper bits (printer strobe, tape out, caps lock diode) unchanged
 4) Write to SELECT ($BFE0) $02 (select KEYBTAPE)
 5) Read from REGISTER ($BFE1) key state for selected row (.KKKKKKK)
 
 Row     KR2..KR0    bits 6      5      4      3      2      1      0
 
 0       %000             edit   1      2      3      4      5      6      
 1       %001             ctrl   Q      W      E      R      T      Y    
 2       %010             lshf   A      S      D      F      G      H    
 3       %011             space  Z      X      C      V      B      N
 4       %100             right  down  left    /      .      ,      M     
 5       %101             rshft  up     '      ;      L      K      J
 6       %110             enter  ]      [      P      O      I      U
 7       %111             del    =      -      0      9      8      7
 
JOYSTICK

Joystick port is standard Atari joystick port with 5 digital inputs and two analog inputs.

Reading joystick digital input:
1) Write to SELECT ($BFE0) $03 (select CONTROLOUT)
2) Read REGISTER ($BFE1) and mask bit 3
3) Write to REGISTER ($BFE1) combination of bit 3 set and rest of bits unchanged
4) Write to SELECT ($BFE0) $02 (select KEYBTAPE)
5) Read from REGISTER ($BFE1) joystick state (...JJJJJ)

Reading joystick analog input:
1) Write to SELECT ($BFE0) $04/$04 (select POTX/POTY)
1) Write anything to REGISTER ($BFE1)
2) Wait at least 300 cycles
3) Read REGISTER ($BFE1) - reading will be roughly between 08 to 230, when joystick is not connected reading will be 255 
 
PARALLEL PORT (PRINTER)

Parallel port has connected 8 data lines, /STROBE signal, BUSY signal. Data lines are bidirectional.

Send character to printer:

1) Write to SELECT ($BFE0) $00 (select BITS)
2) Write to REGISTER ($BFE1) $FF (all bits set to write)
3) Write to SELECT ($BFE0) $01 (select PRINTER)
4) Write to REGISTER ($BFE1) character code
5) Write to SELECT ($BFE0) $03 (select CONTROLOUT)
6) Read from REGISTER ($BFE1) and mask bit 3
7) Write to REGISTER ($BFE1) combination of bit 3 set and rest of bits unchanged
8) Write to SELECT ($BFE0) $02 (select KEYBTAPE)
9) Read from REGISTER ($BFE1) and check bit 6 ==0 (if bit 6 is set then printer is busy. repeat step 9) 
7) Write to SELECT ($BFE0) $03 (select CONTROLOUT)
8) Write to REGISTER ($BFE1) with bit 3 reset (/STROBE)
9) Wait 5us
A) Write to REGISTER ($BFE1) with bit 3 set


TAPE IN/OUT

Read tape:
1) Write to SELECT ($BFE0) $02 (select KEYBTAPE)
2) Read from REGISTER ($BFE1) with bit 7 

Write tape:
1) Write to SELECT ($BFE0) $03 (select CONTROLOUT)
2) Write to REGISTER ($BFE1) with bit 4 


AUDIO
Frida provides 4 channels: A, B, C, D
Channels A,B are mixed together as first output and C,D are mixed together as second audio output. In normal circumstancies, these two audio lines are connected to internal speaker.  
Connecting 3.5mm stereo jack into AUDIO connector disables internal speaker. In such case, channels A,B are routed to left output and channels C,D are routed to right output.

Each channel is controlled by 4 registers:
FREQHI - NVVVFFFF - N..noise on/off, VVV..volume 0..7, FFFF..high 4 bits of frequency
FREQLO - low 8 bit of frequency
WAVEHI - high wave sample 
WAVELO - low wave sample 

FREQHI - channel control and 4 bits of frequency (pitch) control
FREQLO - lower 8 bits of frequency (pitch) control (write to FREQLO is latched and loaded when FREQHI is written)
WAVEHI - high wave form bits
WAVELO - low wave form bits (write to WAVELO is latched and loaded when WAVEHI is written)

FREQL and FREQH forms frequency divider (higher value means lower frequency/tone pitch) that gives pace at which two wave register, WAVEL and WAVEH registers are shifted.
When frequency is zero the clock is stopped
Most significant bits of WAVEL and WAVEH forms value 0..3 that gives output level for the particular channel.
This output level is multiplied by value VVV from FREQHI register.
When N bit is reset, most significant bit shifted out from WAVEL/WAVEH register and is put into bit 0. Effectively, the values in WAVEL/WAVEH registers are rotated.
When N bit is set, the shift register is turned into linear feedback register producing pseudorandom stream of bits.

To set a channel
1) select channel by writting to CONTROL ($BFE0) bits b1-b0 (......CC), channel to be written is indicated by bit set
2) set WAVELO ($BFE7), WAVEHI ($BFE6) 
   e.g. to set triangle wave 
   3 ..X.....
   2 .XXX....
   1 XXXXX...
   
   WAVEL = %10101000 
   WAVEH = %01110000
   
3) write lower 8 bits of frequency to FREQLO ($BFE5) 
4) write higher 4 bits of frequency, noise mode and volume to FREQHI ($BFE34).
   Bits are as follows: NVVVFFFF - N..noise, VVV..volume, FFFF..frequency
            
   pitch = 1.6122MHz / (2 * 8 * FREQ)
   
   FREQ = 1.6122MHz / (2 * 8 * pitch)
   
   TODO: In reality: 1.609375 (64us / 103)
   
   Example:
   Note  Freq[Hz] FREQ RealHz
      
   G#0   25.96    3881
   A0    27.50    3664
   A#0   29.14    3458
   B0    30.87    3264
   C1    32.70    3081 (32.70)
   C#1   34.65    2908
   D1    36.71    2745
   D#1   38.89    2591
   E1    41.20    2446 
   F1    43.65    2308
   F#1   46.25    2179
   G1    49.00    2056
   G#1   51.91    1941
   A1    55.00    1832
   A#1   58.27    1729
   B1    61.74    1632
   C2    65.41    1540 (65.43)
   C#2   69.30    1454
   D2    73.42    1372
   D#2   77.78    1295
   E2    82.41    1223
   F2    87.31    1154
   F#2   92.50    1089
   G2    98.00    1028
   G#2  103.83     970
   A2   110.0      916
   A#2  116.54     865
   B2   123.47     816
   C3   130.8      770 (130.86)
   C#3  138.59     727
   D3   146.83     686
   D#3  155.56     648
   E3   164.81     611
   F3   174.61     577
   F#3  185.00     545
   G3   196.00     514
   G#3  207.65     485
   A3   220.00     458
   A#3  233.08     432
   B3   246.94     408
   C4   261.63     385 (261.72)
   C#4  277.18     363
   D4   293.66     343
   D#4  311.13     324
   E4   329.63     306
   F4   349.23     289
   F#4  369.99     272
   G4   392.00     257
   G#4  415.30     243
   A4   440.00     229
   A#4  466.16     216
   B4   493.88     204
   C5   523.25     193 (522.09)
   C#5  554.37     182
   D5   587.33     171
   D#5  622.25     162
   E5   659.25     153
   F5   698.46     144
   F#5  739.99     136 
   G5   783.99     129
   G#5  830.61     121
   A5   880.00     115
   A#5  932.33     108
   B5   987.77     102
   C6  1046.50      96 (1049.61)
   C#6 1108.73      91 (1107.28)
   D6  1174.66      86 (1171.66)
   D#6 1244.51      81 (1243.98)
   E6  1318.51      76 (1325.82)
   F6  1396.91      72 (1399.48)
   F#6 1479.98      68 (1481.80)
   G6  1567.98      64 (1574.41)
   G#6 1661.22      61 (1651.84)
   A6  1760.00      57 (1767.76)
   A#6 1864.66      54 (1865.97)
   B6  1975.53      51 (1975.74)
   C7  2093.00      48 (2099.22)
   C#7 2217.46      45 (2239.17)
   D7  2349.32      43 (2343.31)
   D#7 2489.02      40 (2519.06)
   E7  2637.02      38 (2651.64)
   F7  2793.83      36 (2798.96)
   F#7 2959.96      34 (2963.60)
   G7  3135.96      32 (3148.83)
   G#7 3322.44      30 (3358.75)
   A7  3520.00      29 (3474.57)
   A#7 3729.31      27 (3731.94)
   B7  3951.07      26 (3875.48)
   C8  4186.01      24 (4198.44)
   C#8 4434.92      23 (4380.98)
  
