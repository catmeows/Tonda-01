
TYPES

Integer - 32bit signed integer
Float - Binary integer decimal - 

VARIABLES
Pointer to line table
Pointer to procedure table
Pointer to 

Line table:
Is generated whenever BASIC enters execution mode.
1) Scan whole program and find highest line number
2) Scan whole program again and store lines that divide program into 8 parts
8 x [line number, adress of line] 

Procedure table:
Is cleared whenever BASIC enters execution mode
Is updated during runtime whenever not yet known procedure is called
[offset to next entry, entry name, adress of procedure, number of parameters, types]



PROCEDURES

PROC foo:PARAM 

Procedures are called by name.

  1) Check procedure name in table
  2) If name exists, jump to line number
  3) Search program for procedure declaration (line starting with PROC name)
  4) If found, add procedure name into table and go to step 1)
  5) Throw error "P Procedure not found"
  
  set Y to procedure table
@nextentry
  read uint8 into B from Y and increment Y
  B==0 ? return
  set U to zero terminated string
@nextchar
  read char into A from stack U and increment U
  A==0 ? jump @found
  cmp byte at Y with A and increment Y
  if equals jump to @nextchar
@falsefound  
  add B to Y
  jump @nextentry
@found
  is next character at Y string terminator and increment Y
  jump @falsefound
  read uint16 into D from Y and return
  
  ----------------------------------------------------
  
  set Y to start of program
  skip line number
  read line length
  check first token on line
  is it PROC ?
  if it is then compare with string at U
    
  
  
Executing procedure
  1) Skip procedure declaration
  2) Create variable frame
  3) Create space for parameters inside procedure frame
  4) Copy parameters from stack and check 
  
  

COMMANDS

PENCOLOUR 0-3, 0-15

PRINT
 AT x,y
 AT x
 INK
 PAPER 
 OVER 0,1,2,3
 INVERSE 0,1
 PEN 0,1,2,3
 WINDOW
 
PLOT
 INK
 PAPER
 OVER
 PEN
 WINDOW
DRAW
 INK
 PAPER
 OVER
 PEN
 WINDOW
CIRLCE
 INK
 PAPER
 OVER
 PEN
 WINDOW
FILL
 INK
 PAPER
 OVER
 PEN
 WINDOW

POINT
ATTR
SCREEN$

BEEP
PLAY 
 
 
