Tonda01 uses 40 track single density single drive.
Tracks are numbered 0 to 39.
Each track has single sector of 3072 bytes.
Track 0 contains disk catalogue, tracks 1-39 contains data.
Single side of disk can store 119808 bytes.


Interfacing:
10111111 111LLLDx - LLL..latch, D..data bit
$BFE0 - STEP0 OFF
$BFE2 - STEP0 ON
$BFE4 - STEP1 OFF
$BFE6 - STEP1 ON
$BFE8 - STEP2 OFF
$BFEA - STEP2 ON
$BFEC - STEP3 OFF
$BFEE - STEP3 ON
$BFF0 - MOTOR OFF
$BFF2 - MOTOR ON
$BFF4 - MODE: READ
$BFF6 - MODE: WRITE
$BFF8 - MODE: LOAD
$BFFA - MODE: SHIFT


WRITE:
A4,A3,A2 selects latch
A1 is data bit 
D7 to D0 goes to shift register if appropriiate mode is set

A4 .. latch address 
A3 .. latch address
A2 .. latch address
A1 .. data
A0 .. not connected

READ:
reads shift register

Track structure:
 Header: 16*SYNC + MARK0 + MARK1 + 1 byte with track id + 1 byte with track id (for verification)
 Data: 16*SYNC + MARK0 + MARK2 +  2 bytes of CRC + <=3072 bytes of data
  
Catalogue - track 0 (836B):
 Disk header (16B)
 39x File entry (782B)
 Track map (39B)
 
 Disk header (16B)
 Diskname        12B
 Version          1B version of disk format
 Reserved         2B reserved
 
  
 File entry (23B):
 Filename        12B 
 Type             1B  B-Basic, C-Code, V-variable, S-Screen, $00-empty, $01-deleted
 Length           2B
 Attribute        2B (start adress, start line)  
 Start track      1B
 Flag             1B  00-normal, 01-write protected
 
 Track map:
 39 bytes
 Values: $00       unused
         $01-$7F   next track
         $80       final track
         $FE       deleted
         $FF       bad  
 
 
Controller has following properties:
 Reading/writing one bit takes 4us ~ 7 cycles.
 Reading/writing one 7 bit word takes 28us ~ 49 cycles
 Reading/writing one 8 bit word (sync) takes 32us ~ 56 cycles

 Reading disk:
 Using pilot "byte" 11111110b (8bits) controller can synchronize. It takes 7 pilot bytes to be fully synchronized.
 Regular bytes are encoded as 7-bit GCR scheme:
 
1010101 - 0
1010110 - 1
1010111 - 2
1011010 - 3
1011011 - 4
1011101 - 5
1011110 - 6
1011111 - 7
1101010 - 8
1101011 - 9
1101101 - A
1101110 - B
1101111 - C
1110101 - D
1110110 - E
1110111 - F
1111010 - MARK0  
1111011 - MARK1
1111101 - MARK2 
1111110 -
1111111 - 
 
 State machine programs
 
   STD FD_WRITE   ;PC,opcode
                 ;PC+1               WRITE LOAD             SHIFT                 RESET         
                 ;PC+2               '0'         '1'        '0'         '1'       '0'/'1'        
                 ;$FFFF           0  NOP         NOP        NOP         NOP       SR,JMP 1    
                 ;EA, rA          1  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;EA+1, rB        2  LOAD        LOAD       SHL0        SHL0      SR,JMP 1
  STA FD_WRITE   ;PC, opcode      3  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;PC+1            4  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;PC+2            5  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;$FFFF           6  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;EA, rA          7  JMP 1       NOP        JMP 1       NOP       SR,JMP 1
                 ;                8  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;                9  LOAD        LOAD       SHL0        SHL0      SR,JMP 1
                 ;                A  NOP         NOP        NOP         NOP       SR,JMP 1      
                 ;                B  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;                C  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;                D  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;                E  JMP 8       JMP 1      JMP 8       JMP 1     SR,JMP 1
                 ;                F  NOP         NOP        NOP         NOP       SR,JMP 1
                 ;                

                 ;                   BIT0        BIT0       BIT1        BIT1
                 ;                   PULSE0      PULSE1     PULSE0      PULSE1 
                 ;
                 ;                0  NOP         NOP        NOP,JMP0    NOP
                 ;                1  NOP         NOP        NOP         NOP
                 ;                2  NOP         NOP        NOP         NOP
                 ;                3  NOP         JMP A      NOP         JMP D
                 ;                4  NOP         JMP A      NOP         JMP D 
                 ;                5  NOP         JMP A      NOP         JMP D
                 ;                6  NOP         JMP A      NOP         JMP D
                 ;                7  NOP         JMP A      NOP         JMP D
                 ;                8  NOP         JMP A      NOP         JMP D
                 ;                9  SHL0,JMP 0  JMP A      CLR,JMP B   JMP D
                 ;                A  SHL1,JMP 0  SHL1,JMP 0 JMP 0       JMP 0             
                 ;                B  SHL1        SHL1       JMP 0       JMP 0
                 ;                C  SHL0,JMP 2  SHL0,JMP 2 JMP 0       JMP 0                 
                 ;                D  SHL1        SHL1       CLR,JMP D   CLR,JMP D 
                 ;                E  SHL1,JMP 2  SHL1,JMP 2 JMP 0       JMP 0
                 ;                F  JMP 0       JMP 0      JMP 0       JMP 0


format:
  -priprav strukturu prazdneho adresare v pameti
  -jdi na track 0 [GOTOTRKX]
  -vymaz stopu zapisem syncu po debo delsi nez jedna otocka [WRSYNCX]
  -zapis hlavicku 0 tracku [WRHEAD]
  -zapis adresar [WRDATA]
  -opakuj 39x
  --jdi o stopu vyse [STEPIN]
  --vymaz stopu zapisem syncu po debo delsi nez jedna otocka [WRSYNCX]
  --zapis hlavicku tracku
cat$:
  -
  




